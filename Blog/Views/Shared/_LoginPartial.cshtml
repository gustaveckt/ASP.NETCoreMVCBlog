@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a href="#" class="nav-link" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                @user.Pseudonym
            </a>
            <ul class="dropdown-menu dropdown-menu-end">
                <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Profile</a></li>
                @if (User.IsInRole(AppRoles.Admin))
                {
                    <li>
                        <a class="dropdown-item" asp-area="" asp-controller="Admin" asp-action="Index">Dashboard</a>
                    </li>
                }
                <li>
                    <form id="logoutForm" class="dropdown-item form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button id="logout" type="submit" class="button-reset">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
       @* <li class="nav-item">
            <a class="btn btn-primary" id="register" asp-area="Identity" asp-page="/Account/Register">Inscription</a>
        </li>*@
        <li class="nav-item">
            <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Connexion</a>
        </li>
    }
</ul>
